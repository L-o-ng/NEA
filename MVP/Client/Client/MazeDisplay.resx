<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        W/9LS0v/ZWVl/2xsbP98fHz/Z2dn/15eXv9vb2//FxcX/wAAAP8AAAD/QEBA/x8fH/9xcXH/Ly8v/wcH
        CP8GBgf/Dg0O/3V2df9tbW3/X19f/46Ojv+YmJj/nJyc/6Wlpf89PT3/jo6O/+bm5v8ODg7/AAAA/01N
        Tf+YmJj/MzMz/+Dg4P/t7e3/tra2/39/f/+BgIH/WVlZ/wAAAP9UVFT/bm5u/zw8PP9TU1P/Dg4O/w4O
        Dv9PT0//09PT/97f3v8XFxf/JSUl/3Nyc/+CgYL/mpqa/5CQkP93d3f/ycnJ/+vr6/81NTX/Y2Nj/wAA
        AP9kZGT//////z8/P/+zs7P/lJSU/0lJSf9LS0v/h4eH/7Ozs//S0tL/j4+P/1xcXP/IyMj/g4OD/4+P
        j//ExMT/RkZG/xoaGv+QkJD/XV1d/yUlJf9fX1//ZWVl/1hYWP9wcHD/ioqK/6SkpP89PT3/Z2dn/7y8
        vP8zMzP/BgYG/1RUVP/g4OD/hYWF/01NTf8/Pz//UlJS/05OTv96enr/cnJy/z8/P/+CgoL/qqqq/6io
        qP9cXFz/MjIy/0pKSv9wcHD/mZmZ/4SEhP+Dg4P/QkJC/2RkZP+FhYX/rKys/6ampv9gYGD/UFBQ/6ur
        q/9mZmb/MjIy/3BwcP9CQkL/AAAA/8XFxf/Hx8f/MjIy/zo6Ov+goKD//f39//7+/v//////8/Pz/yMj
        I/9/f3//3t7e/xcXF/8HBwf/TU1N/ykpKf/g4OD/a2tr/ysrK/9ycnL/5OTk/+np6f/v7+//8PHx/+7u
        7/+np6j/DAwM/2RkZP9CQkL/hISE/9DQ0P+JiYn/SEhI/8bGxv8rKyv/qqqq//v7/P+zs7T/kpKT/5eX
        mP+hoaL/h4eH/zQ0NP9QUFD/iIiI/2JiYv9+fn7/5eXl/29vb/9lZWX/jY2N/xcXF/8IBwj/BQYG/wUF
        B/8FBQf/BQUG/xQTFP8JCQr/AAAA/ycnJ/9vb2//MTEx/2JiYv+hoaD/dnV1/wcHCP8WFhj/BAQE/wMD
        Av8AAAD/AAAA/wAAAP8FBQb/FxcY/0BAQP//////ubm5/wAAAP+7u7v/srKy/5GRkf8SEhL/AAAA/wEB
        Af8AAAD/AAAA/wAAAP8AAAD/AAAB/wAAAP8EBAP/AAAA/xsbG/+UlJT/bGxs/zY2Nv8AAAD/AgIC/wAA
        AP8AAAH/AwIM/wUDDv8EBA3/AwMC/wICAf8BAQH/AAAA/5GRkf9sbGz/AAAA/2pqav/s7Oz/CwsL/wAA
        AP8DAgL/AQAB/wQDH/8CAkP/BARY/woJkv8MC57/AwIq/wAAAP8EBAX/AAAA/76+vv92dnb/AAAA/wMD
        A/8BAgn/BgVF/wkJlf8HB8n/BwfN/wkGyv8IB4L/AAEP/wICAP8AAAD/ERER/xUVFf8AAAD/cHBw/3Jy
        cv8AAAD/BAUE/wAAB/8IB3j/Cwnh/woL7v8HBvn/AQL+/wUF//8HB4//AAAA/wMDBf8AAAD/tbW1/1lZ
        Wf8AAAD/AwMA/wkJZ/8ICPj/AQL//wYG9/8LCsz/Bwb3/wQG//8FBWf/AAAA/wEBA/8CAgL/AAAA/wAA
        AP9ra2v/UlJT/wAAAP8CAgD/BQV+/wYF//8IBt//AwM7/wUEdP8EA/n/AAD//wcIt/8AAAT/AwMD/wAA
        AP+4uLj/Wlpa/wAAAP8DAwD/CQl9/wQE//8BAf//BgZ//wAAAP8HB4X/BQT//wcHwf8BAQ//AAAA/xMT
        FP8MDAz/AAAA/2trbP9VU1T/AAAA/wUFC/8LC8D/AAD//wsLt/8AAAD/BQQ5/wYG8f8AAP//BQa+/wAA
        Bv8DAwP/AAAA/7y8vP+VlZX/AAAA/wQEAP8EBS7/DAyx/wkI9v8ND57/AgMg/wUHq/8CAv//CQfY/wQE
        Fv8AAAD/Pz9A/ygoKP8AAAD/bGxt/1lZWf8AAAD/BAMB/woKl/8DBP//AgP7/wkLu/8IB93/AQL//wQD
        //8MCqj/AAAD/wQEBP8AAAD/ra2t//Ly8v9VVVX/AwME/wAAAP8BAQP/BQUo/wwMW/8REqr/Dg/X/wwM
        1/8JCYf/AgEG/wAAAP9MTE3/Jycn/wAAAP9vb2//tra2/wAAAP8DAwD/AgMb/wkKnf8HBvr/BgX//wcG
        +f8HB83/CQmC/wICH/8CAgH/AAAA/zY2Nv/09PT/fX19/1ZWVv9iYmL/AQAB/wEBAf8BAQD/AAAA/wQD
        Ef8FBRv/BwcY/wUEBf8DAgL/AAAA/3R0dP8iIiL/AAAA/3BwcP//////ZGRk/wAAAP8CAgH/AAAE/wgH
        WP8IB3T/BgY4/wMCEv8CAgD/AgMB/wAAAP8DAwT/RERE/6Kiov/w8PD/aGho/1RUVP84ODj/AwMD/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wICAv8RERH/qKio/0dHR/8AAAD/tbW1/6qqqv+goKD/ZWVl/wAA
        AP8BAQL/AAAA/wAAAP8AAAD/AAAA/wAAAP8BAQH/AAAA/0VFRf+vr6//wMDA/0xMTP9bW1v/Xl5e/2tr
        a/9vb2//PDw8/x4eHv8hISL/Kyst/2pqa/9qa2v/enp6/2lpaf9hYWH/QkJC/wAAAP+4uLj/3d3d/zQ0
        NP9cXFz/Ojo6/wAAAP8BAQH/AAAA/wcHCP8nJyj/UFBR/3Z2dv/ExMT/3t7e/3t7e/8ICAj/GRkZ/4OD
        g/+Xl5f/hYWF/29vb/96enr/dHR0/3R0dP92dnb/hISE/4eHh/9xcXH/cXFx/xMTE/8AAAD/AAAA/6io
        qP+Ojo7/Kysr/yoqKv8rKyv/FxcX/xoaGv8WFhf/SUlJ/3d3d/9dXV3/YGBg/zY2Nv8MDAz/AAAA/yIi
        Iv95eXn/hISE/29vb/95eXn/jY2N/4CAgP+Dg4P/g4OD/4KCgv9/f3//fn5+/4aGhv9LS0v/AAAA/wEB
        Af8AAAD/LS0t/zY2Nv8TExP/KCgo/0ZGRv9DQ0P/RERE/0RERP9DQ0P/Kioq/x0dHf9XV1f/S0tL/09P
        T/8ODg7/CwsL/xQUFP8/Pz//Wlpa/zQ0NP8zMzP/NjY2/zU1Nf81NTX/NTU1/zU1Nf85OTn/Jycn/wAA
        AP8BAQH/AAAA/wAAAP8AAAD/BAQE/woKCv8CAgL/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/ExMT/yIi
        Iv8nJyf/DAwM/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AgIC/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>